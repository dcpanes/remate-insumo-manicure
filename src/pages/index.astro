---
// Importar productos desde archivo separado
import { productos } from '../data/productos.js';
import ProductCard from '../components/ProductCard.astro';

// N√∫mero de WhatsApp 
const numeroWhatsApp = "56948930101";
---

<html lang="es">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- SEO y Performance -->
		<title>Remate Insumos de Manicure - Ofertas Especiales</title>
		<meta name="description" content="Aprovecha nuestros precios especiales en insumos de manicure de alta calidad. Esmaltes, herramientas y m√°s." />
		<meta name="keywords" content="manicure, esmaltes, u√±as, ofertas, insumos, belleza" />
		
		<!-- Preload recursos cr√≠ticos -->
		<link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Lato:wght@300;400;700;900&display=swap" as="style" onload="this.onload=null;this.rel='stylesheet'">
		<noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Lato:wght@300;400;700;900&display=swap"></noscript>
		
		<!-- DNS prefetch para WhatsApp -->
		<link rel="dns-prefetch" href="//wa.me">
		
		<!-- Open Graph -->
		<meta property="og:title" content="Remate Insumos de Manicure" />
		<meta property="og:description" content="Aprovecha nuestros precios especiales en insumos de manicure de alta calidad" />
		<meta property="og:type" content="website" />
		
		<!-- Preload script cr√≠tico -->
		<!-- <link rel="modulepreload" href="/js/app.js" /> -->

		<!-- CSS optimizado inline cr√≠tico -->
		<style>
			:root {
				--color-1: #F3B5F5;
				--color-2: #F5F3B5;
				--color-3: #B5F5F3;
			}

			* {
				margin: 0;
				padding: 0;
				box-sizing: border-box;
			}

			body {
				font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
				line-height: 1.6;
				color: #333;
				background-color: #f8fafc;
				font-display: swap;
			}

			.container {
				max-width: 1200px;
				margin: 0 auto;
				padding: 0 20px;
			}

			/* Header */
			.header {
				background: var(--color-1);
				color: #2d3748;
				/* padding: 1rem 0; */
				text-align: center;
			}

			.logo {
				font-family: 'Lato', 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
				font-size: clamp(1.8rem, 4vw, 2.5rem);
				font-weight: 700;
				margin-bottom: 0.5rem;
				color: white;
			}

			/* Main */
			.main {
				padding: 3rem 0;
			}

			.hero {
				text-align: center;
				margin-bottom: 3rem;
			}

			.hero h2 {
				font-size: clamp(1.8rem, 4vw, 2.2rem);
				color: #2d3748;
				margin-bottom: 1rem;
			}

			.hero p {
				font-size: 1.1rem;
				color: #718096;
				max-width: 600px;
				margin: 0 auto;
				margin-bottom: 2rem;
			}

			/* Barra de b√∫squeda */
			.search-container {
				max-width: 800px;
				margin: 0 auto 2rem;
				position: relative;
			}

			.search-input {
				width: 100%;
				padding: 12px 20px 12px 45px;
				border: 2px solid #e2e8f0;
				border-radius: 25px;
				font-size: 16px;
				outline: none;
				transition: border-color 0.3s ease, box-shadow 0.3s ease;
				background-color: white;
			}

			.search-input:focus {
				border-color: var(--color-1);
				box-shadow: 0 0 0 3px rgba(243, 181, 245, 0.1);
			}

			.search-icon {
				position: absolute;
				left: 15px;
				top: 50%;
				transform: translateY(-50%);
				color: #718096;
				width: 20px;
				height: 20px;
			}

			.clear-search {
				position: absolute;
				right: 15px;
				top: 50%;
				transform: translateY(-50%);
				background: none;
				border: none;
				color: #718096;
				cursor: pointer;
				display: none;
				padding: 5px;
				border-radius: 50%;
				transition: background-color 0.3s ease;
			}

			.clear-search:hover {
				background-color: #f1f5f9;
			}

			.clear-search.visible {
				display: block;
			}

			.no-results {
				text-align: center;
				color: #718096;
				font-size: 1.1rem;
				margin: 3rem 0;
				display: none;
			}

			.no-results.visible {
				display: block;
			}

			/* Products Grid con CSS Grid optimizado */
			.productos-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
				gap: 1.5rem;
				margin-bottom: 4rem;
				contain: layout;
			}

			/* Footer */
			.footer {
				background: #2d3748;
				color: white;
				text-align: center;
				padding: 2rem 0;
			}

			/* Media queries optimizadas */
			@media (max-width: 768px) {
				.container {
					padding: 0 15px;
				}
				
				.productos-grid {
					grid-template-columns: repeat(2, 1fr);
					gap: 0.75rem;
				}
				
				.main {
					padding: 2rem 0;
				}
			}

			@media (max-width: 480px) {
				.productos-grid {
					grid-template-columns: 1fr;
				}
			}

			/* Optimizaciones de performance */
			.productos-grid {
				will-change: transform;
			}

			@media (prefers-reduced-motion: reduce) {
				*,
				*::before,
				*::after {
					animation-duration: 0.01ms !important;
					animation-iteration-count: 1 !important;
					transition-duration: 0.01ms !important;
				}
			}
		</style>
	</head>
	<body>
		<header class="header">
			<div class="container">
				<h1 class="logo">Remate Insumos Manicure</h1>
			</div>
		</header>

		<main class="main">
			<div class="container">
				<section class="hero">
					
					<!-- Barra de b√∫squeda -->
					<div class="search-container">
						<input 
							type="text" 
							class="search-input" 
							placeholder="Buscar productos..."
							id="search-input"
							autocomplete="off"
						/>
						<button class="clear-search" id="clear-search" title="Limpiar b√∫squeda">
							<svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
								<path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
							</svg>
						</button>
					</div>
				</section>

				<section class="productos-grid">
					{productos.map((producto) => (
						<ProductCard producto={producto} />
					))}
				</section>

				<div class="no-results" id="no-results">
					<p>No se encontraron productos que coincidan con tu b√∫squeda.</p>
					<p>Intenta con otros t√©rminos o revisa todos nuestros productos.</p>
				</div>
			</div>
		</main>

		<footer class="footer">
			<div class="container">
				<p>&copy; 2025 Remate Insumos Manicure. Todos los derechos reservados.</p>
			</div>
		</footer>

		<!-- Script optimizado cargado de forma diferida -->
		<script type="module">
			// N√∫mero de WhatsApp de contacto
			const numeroWhatsApp = "56984533493";


			// Funci√≥n para generar mensaje de WhatsApp
			function generarMensajeWhatsApp(producto) {
				const mensaje = `¬°Hola! Estoy interesado(a) en el siguiente producto:

üõçÔ∏è ${producto.nombre}
üí∞ Precio: ${producto.precio}

${producto.descripcion}

¬øPodr√≠as darme m√°s informaci√≥n sobre disponibilidad y formas de pago?

¬°Gracias!`;

				return encodeURIComponent(mensaje);
			}

			// Funci√≥n para obtener datos del producto desde el DOM
			function obtenerDatosProducto(button) {
				const card = button.closest('.producto-card');
				if (!card) return null;
				
				const nombre = card.querySelector('.producto-nombre')?.textContent || '';
				const precioText = card.querySelector('.precio')?.textContent || '';
				const cantidadText = card.querySelector('.cantidad')?.textContent || '';
				const descripcion = card.querySelector('.producto-descripcion')?.textContent || '';
				
				// Extraer el precio num√©rico
				const precioMatch = precioText.match(/[\d,]+/);
				const precio = precioMatch ? parseInt(precioMatch[0].replace(/,/g, '')) : 0;
				
				// Extraer la cantidad num√©rica
				const cantidadMatch = cantidadText.match(/\d+/);
				const cantidad = cantidadMatch ? parseInt(cantidadMatch[0]) : 0;
				
				return {
					nombre,
					precio,
					cantidad,
					descripcion
				};
			}

			// Funci√≥n para manejar clicks en botones de WhatsApp
			function manejarClickWhatsApp(event) {
				const button = event.target;
				const producto = obtenerDatosProducto(button);
				
				if (producto && producto.nombre) {
					// Generar mensaje de WhatsApp
					const mensaje = generarMensajeWhatsApp(producto);
					
					// Abrir WhatsApp con el mensaje
					const urlWhatsApp = `https://wa.me/${numeroWhatsApp}?text=${mensaje}`;
					window.open(urlWhatsApp, '_blank');
				} else {
					console.error('No se pudieron obtener los datos del producto');
				}
			}

			// Inicializar la aplicaci√≥n cuando el DOM est√© listo
			document.addEventListener('DOMContentLoaded', function() {
				console.log('Aplicaci√≥n iniciada');
				
				// Agregar event listeners a todos los botones de WhatsApp
				const botonesWhatsApp = document.querySelectorAll('.btn-whatsapp');
				
				botonesWhatsApp.forEach(button => {
					button.addEventListener('click', manejarClickWhatsApp);
				});
				
				console.log('Event listeners agregados a', botonesWhatsApp.length, 'botones');
				
				// Mostrar productos cargados en la p√°gina
				const productCards = document.querySelectorAll('.producto-card');
				console.log('Productos mostrados en la p√°gina:', productCards.length);

				// Inicializar funcionalidad de b√∫squeda
				initializeSearch();
			});

			// Funci√≥n para inicializar la b√∫squeda
			function initializeSearch() {
				const searchInput = document.getElementById('search-input');
				const clearButton = document.getElementById('clear-search');
				const productCards = document.querySelectorAll('.producto-card');
				const noResults = document.getElementById('no-results');

				if (!searchInput || !clearButton || !noResults) {
					console.error('Elementos de b√∫squeda no encontrados');
					return;
				}

				// Funci√≥n para filtrar productos
				function filterProducts(searchTerm) {
					const term = searchTerm.toLowerCase().trim();
					let visibleCount = 0;

					productCards.forEach(card => {
						const nombre = card.querySelector('.producto-nombre')?.textContent?.toLowerCase() || '';
						const descripcion = card.querySelector('.producto-descripcion')?.textContent?.toLowerCase() || '';
						
						const matches = nombre.includes(term) || descripcion.includes(term);
						
						if (matches || term === '') {
							card.style.display = 'block';
							visibleCount++;
						} else {
							card.style.display = 'none';
						}
					});

					// Mostrar/ocultar mensaje de "no resultados"
					if (visibleCount === 0 && term !== '') {
						noResults.classList.add('visible');
					} else {
						noResults.classList.remove('visible');
					}

					// Mostrar/ocultar bot√≥n de limpiar
					if (term !== '') {
						clearButton.classList.add('visible');
					} else {
						clearButton.classList.remove('visible');
					}
				}

				// Event listener para el input de b√∫squeda
				searchInput.addEventListener('input', function(e) {
					filterProducts(e.target.value);
				});

				// Event listener para el bot√≥n de limpiar
				clearButton.addEventListener('click', function() {
					searchInput.value = '';
					filterProducts('');
					searchInput.focus();
				});

				// Permitir limpiar con Escape
				searchInput.addEventListener('keydown', function(e) {
					if (e.key === 'Escape') {
						searchInput.value = '';
						filterProducts('');
					}
				});

				console.log('B√∫squeda inicializada con', productCards.length, 'productos');
			}
		</script>
		
		<!-- Registro del Service Worker -->
		<script>
			if ('serviceWorker' in navigator) {
				window.addEventListener('load', function() {
					// Construir la URL del service worker basada en la ubicaci√≥n actual
					const baseURL = window.location.pathname.includes('/remate-insumo-manicure/') 
						? '/remate-insumo-manicure/' 
						: '/';
					const swURL = baseURL + 'sw.js';
					
					navigator.serviceWorker.register(swURL)
						.then(function(registration) {
							console.log('Service Worker registrado exitosamente:', registration.scope);
						})
						.catch(function(error) {
							console.log('Error al registrar Service Worker:', error);
						});
				});
			}
		</script>
	</body>
</html>
